name: examples

on:
  push:
    branches: [ main ]
    paths:
      - "**.py"
      - ".github/workflows/examples.yml"
  pull_request:
    paths: 
      - "**.py"
      - ".github/workflows/examples.yml"
  schedule:
      - cron: "0 0 1 * *"

jobs:
  pip-build:
    name: Default ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          pip install .
          pip install mud==0.1rc1

      - name: Test CLI
        run: |
          cd /tmp
          mud_run_all -v
  
      - name: Generate figures using makefile
        run: |
          cd scripts
          make clean
          make ode-examples

  conda-build:
    name: Conda ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: ["3.9"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Fenics
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment.yml
          environment-name: test
          extra-specs: |
            python=${{ matrix.python-version }}
 
      #- name: Fenics install
      #  run: |
      #    conda env update --file environment.yml --name test

      - name: Install Dependencies
        run: |
          pip install .
          pip install mud==0.1rc1

      - name: Conda information
        run: conda list

      - name: Test that command-line scripts installed
        run: |
          cd /tmp
          mud_run_all -v

      - name: Generate figures using Makefile
        run: |
          cd scripts
          make clean
          make pde-examples
          make examples

      - name: Tests
        run: |
          pip install -e .[dev]
          pytest

      - name: Tests without packaged files
        run: |
          rm src/mud_examples/data/pde_2D/*
          pytest

      - name: Upload coverage to codecov.io
        if: ${{ matrix.python-version }} == 3.8
        run: |
           export CODECOV_VERSION=${{ secrets.codecov_token }}
           bash <(curl -s https://codecov.io/bash)

      - name: Upload coverage to coveralls.io
        if: ${{ matrix.python-version }} == 3.8
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
