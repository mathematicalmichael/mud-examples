[metadata]
name = mud_examples
description = Maximal Updated Density Examples
author = Mathematical Michael
author-email = consistentbayes@gmail.com
license = mit
long-description = file: README.md
long-description-content-type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/mathematicalmichael/mud-examples.git
project-urls =
    Documentation = https://github.com/mathematicalmichael/mud-examples.git
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
#package_data = {'': ['data/pde_2D/*.pkl']}

# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    importlib-metadata; python_version<"3.8"
    mud~=0.0.24
    numpy
    scipy
    matplotlib

# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >=3.5

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install mud_examples[test]`
# Add here test requirements (semicolon/line-separated)
test =
    pytest
    pytest-cov
    coverage
    coveralls
    flake8
    pre-commit

pub =
    setuptools
    wheel
    twine

[options.entry_points]
console_scripts =
    mud_examples = mud_examples.runner:run
    generate_poisson_data = mud_examples.poisson:run
    mud_run_lin_meas = mud_examples.linear.lin:run_meas
    mud_run_inv = mud_examples.runner:run_monomial
    mud_run_lin = mud_examples.runner:run_linear
    mud_run_pde = mud_examples.runner:run_pde
    mud_run_ode = mud_examples.runner:run_ode
    mud_run_all = mud_examples.runner:run_all

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
addopts =
    --cov mud_examples
    --cov-report term-missing
    --verbose
    --doctest-modules src/mud_examples

norecursedirs =
    dist
    build
    .tox

testpaths = tests

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.1
package = mud_examples
extensions = 
    markdown
